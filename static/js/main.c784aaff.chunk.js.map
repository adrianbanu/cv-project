{"version":3,"sources":["components/PersonalInfo.js","components/ShowEduInfo.js","components/Education.js","components/ShowExperienceInfo.js","components/WorkExperience.js","components/utils/createPDF.js","App.js","index.js"],"names":["PersonalInfo","props","changeInfo","event","setState","target","name","value","getStateValues","state","firstName","lastName","email","telephone","this","screenView","className","type","placeholder","onChange","Component","ShowEduInfo","dateValues","valueStartDate","valueEndDate","format","Date","valueTitle","evt","showInput","elementId","valueOrganization","inputType","onFocus","focus","onBlur","blur","onClick","deleteEducation","Education","id","educationInfo","filter","item","index","findIndex","addToEducation","EduExp","titleAwarded","nameOrganization","startDate","endDate","loopEducationInfo","length","educationSection","i","push","classNameSection","classNameSectionHeader","classNameButtons","ShowExperienceInfo","mainActivities","deleteExperience","split","map","task","WorkExperience","experienceInfo","addToExperience","WorkExp","titleOcupation","loopExperienceInfo","experienceSection","colorAccent","colorDefault","colorDarkGrey","colorLightGrey","fontType","createPDF","doc","jsPDF","xPosition","yPosition","updateHeight","row","addPage","addPersInfo","personalInfo","setFont","setFontSize","setTextColor","text","setDrawColor","line","addEducation","addWorkExperience","workExpInfo","jobResponsibilities","numberOfRows","Math","floor","maxWidth","savePDF","title","save","App","setStateValue","valoriExp","compName","generatePDF","createCV","valoriPersonal","valoriEdu","buttonValue","buttonLabel","changeView","bind","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c784aaff.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass PersonalInfo extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            telephone: \"\"\r\n            \r\n        }\r\n    }\r\n    \r\n    changeInfo = (event) =>{\r\n\t\tthis.setState ({\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t},\r\n        () =>{\r\n            this.props.getStateValues([this.state], \"valoriPersonal\")\r\n        })\r\n\t}\r\n\r\n    render(){\r\n        return(  \r\n            this.props.screenView === 0 ?\r\n\r\n                //Edit screen           \r\n                <div className=\"edit-section-container\"> \r\n                    <h3 className=\"edit-section-header\">Personal Information</h3>\r\n                    <input type=\"text\" name =\"firstName\" placeholder=\"First name\" value={this.state.firstName} onChange={this.changeInfo}/>\r\n                    <input type=\"text\" name =\"lastName\" placeholder=\"Last name\" value={this.state.lastName} onChange={this.changeInfo}></input>\r\n                    <input type=\"email\" name =\"email\" placeholder=\"Email\"  value={this.state.email} onChange={this.changeInfo}></input>\r\n                    <input type=\"tel\" name =\"telephone\" placeholder=\"Telephone\"  value={this.state.telephone} onChange={this.changeInfo}></input>\r\n                    \r\n                </div>\r\n\r\n            :   //Preview screen\r\n                <div className=\"preview-personal-container\">\r\n                    <h3 className=\"preview-section-header\">\r\n                        <label>{this.state.firstName}</label>&nbsp;\r\n                        <label>{this.state.lastName}</label>\r\n                    </h3>\r\n                    <div className=\"contact-telephone\">\r\n                        <label className=\"contact\">Telephone: </label>\r\n                        <label className=\"contact-detail\">{this.state.telephone}</label>                        \r\n                    </div>\r\n                    <div className=\"contact-email\">\r\n                        <label className=\"contact\">Email: </label>\r\n                        <label className=\"contact-detail\">{this.state.email}</label>                        \r\n                    </div>\r\n                    <div className=\"grey-line\"></div>                    \r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonalInfo;","import React from \"react\";\r\nimport {format} from 'date-fns';\r\n\r\nfunction ShowEduInfo(props) {\r\n  let dateValues;\r\n  if (props.valueStartDate === \"\" || props.valueEndDate === \"\"){\r\n    dateValues = \" \";\r\n  }else{\r\n    dateValues = `${format(new Date(props.valueStartDate), 'MMMM yyyy')} - ${format(new Date(props.valueEndDate), 'MMMM yyyy')}`;\r\n  }\r\n\r\n  return (\r\n    props.screenView === 0 ?\r\n\r\n      // Edit screen\r\n      <div className=\"edit-section-container\" key={props.elementId}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"titleAwarded\"\r\n          placeholder=\"Name of title\"\r\n          value={props.valueTitle}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"nameOrganization\"\r\n          placeholder=\"Name of organization\"\r\n          value={props.valueOrganization}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n        />\r\n        \r\n        <input\r\n          type={props.inputType} \r\n          name=\"startDate\"\r\n          placeholder=\"Start date\"\r\n          onFocus={props.focus}\r\n          onBlur={props.blur}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          value={props.valueStartDate}\r\n        />\r\n        \r\n        <input\r\n          type={props.inputType}\r\n          name=\"endDate\"\r\n          placeholder=\"End date\"\r\n          onFocus={props.focus}\r\n          onBlur={props.blur}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          value={props.valueEndDate}\r\n        />\r\n        \r\n        <button className=\"edit-buttons buttons\"\r\n          onClick={() => props.deleteEducation(props.elementId)}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n\r\n    : //Preview screen\r\n      <div className=\"preview-education-container\">\r\n        <div className=\"title\">{props.valueTitle}</div>\r\n        <div className=\"name-organization\">{props.valueOrganization}</div>\r\n        <div className=\"start-end\">\r\n          <label>{dateValues}</label>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ShowEduInfo;\r\n","import React, { Component } from \"react\";\r\nimport ShowEduInfo from \"./ShowEduInfo\";\r\n\r\nclass Education extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            EduExp: {\r\n                titleAwarded : \"\",\r\n                nameOrganization: \"\",\r\n                startDate : \"\",\r\n                endDate : \"\",\r\n                id : 0\r\n            },\r\n            educationInfo : [],\r\n            type: \"text\"\r\n        }\r\n    }\r\n\r\n    onFocus = () => {\r\n        this.setState({\r\n          type: 'date'\r\n        });\r\n    }\r\n\r\n    onBlur = () =>{\r\n        this.setState({\r\n            type: 'text'\r\n        })\r\n    }\r\n\r\n    deleteEducation = (id) =>{\r\n        this.setState(state => {\r\n            const educationInfo = state.educationInfo.filter((item) => id !== item.id);\r\n            \r\n            this.props.getStateValues(educationInfo, \"valoriEdu\") // send the array in App\r\n            \r\n            return {\r\n                educationInfo,\r\n            };\r\n          });\r\n    }\r\n\r\n    changeInfo = (id, event) =>{\r\n        let educationInfo = [...this.state.educationInfo];\r\n        let index = educationInfo.findIndex((item) => id === item.id)\r\n        educationInfo[index].[event.target.name] = event.target.value;\r\n\r\n        this.props.getStateValues(educationInfo, \"valoriEdu\") // send the array in App\r\n\r\n        this.setState({\r\n                educationInfo\r\n            }\r\n        )\r\n\t}\r\n\r\n    addToEducation = () =>{\r\n        this.setState({\r\n            educationInfo : [...this.state.educationInfo, this.state.EduExp],\r\n            EduExp :{titleAwarded : \"\", nameOrganization : \"\", startDate : \"\", endDate : \"\", id : this.state.EduExp.id + 1}\r\n        })\r\n        \r\n    }\r\n\r\n    loopEducationInfo = () =>{\r\n        this.state.educationInfo.length === 0 && this.addToEducation()\r\n        let educationSection = []\r\n        for(let i = 0; i < this.state.educationInfo.length; i++){\r\n            educationSection.push(<ShowEduInfo valueTitle = {this.state.educationInfo[i].titleAwarded} \r\n                valueOrganization={this.state.educationInfo[i].nameOrganization}\r\n                valueStartDate = {this.state.educationInfo[i].startDate} \r\n                valueEndDate = {this.state.educationInfo[i].endDate}\r\n                elementId = {this.state.educationInfo[i].id}\r\n                key = {this.state.educationInfo[i].id}// to not have the warning in console\r\n                deleteEducation = {this.deleteEducation}\r\n                screenView = {this.props.screenView} \r\n                showInput = {this.changeInfo} blur = {this.onBlur} focus = {this.onFocus} inputType ={this.state.type}/>)\r\n        }\r\n\r\n        return <div className=\"education-section\">\r\n            {educationSection}\r\n        </div>\r\n    }\r\n\r\n    render(){\r\n        let classNameSection = this.props.screenView === 0 ? \"edit-section\" : \"preview-section\";\r\n        let classNameSectionHeader = this.props.screenView === 0 ? \"edit-section-header\" : \"preview-education-header\";\r\n        let classNameButtons = this.props.screenView === 0 ? \"edit-buttons buttons\" : \"no-display\";\r\n        return(\r\n            <div className={classNameSection}>\r\n                <h3 className={classNameSectionHeader}>Education and training</h3>\r\n                {this.loopEducationInfo()}\r\n                <button className={classNameButtons} onClick={this.addToEducation}>Add education </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Education;   ","import React from \"react\";\r\nimport {format} from 'date-fns';\r\n\r\nfunction ShowExperienceInfo(props) {\r\n  let dateValues;\r\n  if (props.valueStartDate === \"\" || props.valueEndDate === \"\"){\r\n    dateValues = \" \";\r\n  }else{\r\n    dateValues = `${format(new Date(props.valueStartDate), 'MMMM yyyy')} - ${format(new Date(props.valueEndDate), 'MMMM yyyy')}`;\r\n  }\r\n\r\n    return (\r\n      props.screenView === 0 ?\r\n\r\n      // Edit screen\r\n        <div className=\"edit-section-container\" key={props.elementId}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"titleOcupation\"\r\n            placeholder=\"Name of title\"\r\n            value={props.valueTitle}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"nameOrganization\"\r\n            placeholder=\"Name of organization\"\r\n            value={props.valueOrganization}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          />\r\n          \r\n          <input\r\n            type={props.inputType}\r\n            name=\"startDate\"\r\n            placeholder=\"Start date\"\r\n            onFocus={props.focus}\r\n            onBlur={props.blur}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n            value={props.valueStartDate}\r\n          />\r\n          \r\n          <input\r\n            type={props.inputType}\r\n            name=\"endDate\"\r\n            placeholder=\"End date\"\r\n            onFocus={props.focus}\r\n            onBlur={props.blur}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n            value={props.valueEndDate}\r\n          />\r\n          \r\n          <textarea\r\n            name=\"mainActivities\"\r\n            placeholder=\"Main activities\"\r\n            value={props.mainActivities}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          ></textarea>\r\n          \r\n          <button className=\"edit-buttons buttons\"\r\n            onClick={() => props.deleteExperience(props.elementId)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n\r\n      : //Preview screen\r\n      <div className=\"preview-work-container\">\r\n        <div className=\"title\">{props.valueTitle}</div>\r\n        <div className=\"name-organization\">{props.valueOrganization}</div>\r\n        <div className=\"start-end\">\r\n          <label>{dateValues}</label>\r\n        </div>\r\n        <ul className=\"main-responsabilities\">\r\n          {props.mainActivities.split('\\n').map((task, i) => {\r\n            return <li key={i}>{task}</li>;\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ShowExperienceInfo;\r\n","import React, { Component } from \"react\";\r\nimport ShowExperienceInfo from \"./ShowExperienceInfo\";\r\n\r\nclass WorkExperience extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            WorkExp: {\r\n                titleOcupation : \"\",\r\n                nameOrganization: \"\",\r\n                startDate : \"\",\r\n                endDate : \"\",\r\n                mainActivities: \"\",\r\n                id : 0\r\n            },\r\n            experienceInfo : [],\r\n            type: \"text\"\r\n        }\r\n    }\r\n\r\n    onFocus = () => {\r\n        this.setState({\r\n          type: 'date'\r\n        });\r\n    }\r\n\r\n    onBlur = () =>{\r\n        this.setState({\r\n            type: 'text'\r\n        })\r\n    }\r\n\r\n    deleteExperience = (id) =>{\r\n        this.setState(state => {\r\n            const experienceInfo = state.experienceInfo.filter((item) => id !== item.id);\r\n\r\n            this.props.getStateValues(experienceInfo, \"valoriExp\"); \r\n       \r\n            return {\r\n                experienceInfo,\r\n            };\r\n          });\r\n    }\r\n\r\n    changeInfo = (id, event) =>{\r\n        let experienceInfo = [...this.state.experienceInfo];\r\n        let index = experienceInfo.findIndex((item) => id === item.id)\r\n        experienceInfo[index].[event.target.name] = event.target.value;\r\n\r\n        this.props.getStateValues(experienceInfo, \"valoriExp\"); \r\n\r\n        this.setState({\r\n                experienceInfo\r\n            }\r\n        )\r\n\t}\r\n\r\n    addToExperience = () =>{\r\n        this.setState({\r\n            experienceInfo : [...this.state.experienceInfo, this.state.WorkExp],\r\n            WorkExp :{titleOcupation : \"\", nameOrganization : \"\", startDate : \"\", endDate : \"\", mainActivities: \"\", id : this.state.WorkExp.id + 1}\r\n        })\r\n    }\r\n\r\n    loopExperienceInfo = () =>{\r\n        this.state.experienceInfo.length === 0 && this.addToExperience()\r\n        let experienceSection = []\r\n        for(let i = 0; i < this.state.experienceInfo.length; i++){\r\n            experienceSection.push(<ShowExperienceInfo valueTitle = {this.state.experienceInfo[i].titleOcupation} \r\n                valueOrganization={this.state.experienceInfo[i].nameOrganization}\r\n                valueStartDate = {this.state.experienceInfo[i].startDate} \r\n                valueEndDate = {this.state.experienceInfo[i].endDate}\r\n                mainActivities = {this.state.experienceInfo[i].mainActivities}\r\n                elementId = {this.state.experienceInfo[i].id}\r\n                key = {this.state.experienceInfo[i].id}\r\n                deleteExperience = {this.deleteExperience}\r\n                screenView = {this.props.screenView}\r\n                showInput = {this.changeInfo} blur = {this.onBlur} focus = {this.onFocus} inputType ={this.state.type}/>)\r\n        }\r\n\r\n        return <div className=\"experience-section\">\r\n            {experienceSection}\r\n        </div>\r\n    }\r\n\r\n    render(){\r\n        let classNameSection = this.props.screenView === 0 ? \"edit-section\" : \"preview-section\";\r\n        let classNameSectionHeader = this.props.screenView === 0 ? \"edit-section-header\" : \"preview-work-header\";\r\n        let classNameButtons = this.props.screenView === 0 ? \"edit-buttons buttons\" : \"no-display\";\r\n        return(\r\n            <div className={classNameSection}>\r\n                <h3 className={classNameSectionHeader}>Work experience</h3>\r\n                {this.loopExperienceInfo()}\r\n                <button className={classNameButtons} onClick={this.addToExperience}>Add experience </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WorkExperience;","import jsPDF from 'jspdf';\r\nimport {format} from 'date-fns';\r\n\r\nconst rowHeight = 10;\r\n//const rowHeightDouble = 20;\r\nconst smallHeight = 5;\r\nconst verySmallHeight = 2;\r\nconst colorAccent = \"#3D85C6\";\r\nconst colorDefault = \"#444444\";\r\nconst colorDarkGrey = \"#666666\";\r\nconst colorLightGrey = \"#999999\";\r\nconst fontType = 'Courier';\r\n\r\nconst createPDF = () =>{\r\n    const doc = new jsPDF();\r\n\r\n    let xPosition = 20;\r\n    let yPosition = 20;\r\n    let pageHeight = 280\r\n\r\n    // am incercat sa scriu functia fara const in fata. Imi dadea eroarea ca este updateHeight este undefined. De ce?\r\n    // in componenta mergea foarte bine. Cred ca acolo mergea pentru ca erau considerate metode.\r\n    // aici nu sunt intr-o clasa deci trebuie sa o declari ca functie. Daca folosesc function e ok:\r\n    /*\r\n        function updateHeight(row){\r\n            yPosition = yPosition + row;\r\n        }\r\n    */\r\n   // Dar totusi ar trebui sa mearga... Vezi toate exemplele de aici: https://www.w3schools.com/js/js_arrow_function.asp. Cred ca e altceva.\r\n   // Poate e chestia aia cu declaratul obligatoriu (strict mode). Si aici e implementat ca default..?\r\n    const updateHeight = (row) => {\r\n        yPosition = yPosition + row;\r\n        if(yPosition >= pageHeight){\r\n            doc.addPage();\r\n            yPosition = 20;\r\n        }\r\n    }\r\n\r\n    return {\r\n        // sa vad daca exista un fel de loop care sa treaca prin toate proprietatile obiectului.\r\n        addPersInfo : (personalInfo) => {\r\n\r\n            // section name\r\n            doc.setFont(fontType, 'bold');\r\n            doc.setFontSize(18);\r\n            doc.setTextColor(colorAccent);\r\n            doc.setFont(fontType, 'bold');\r\n            doc.text(xPosition, yPosition, `${personalInfo[0].firstName} ${personalInfo[0].lastName}`);\r\n            updateHeight(smallHeight);\r\n\r\n            // Telephone and Email\r\n            doc.setTextColor(colorDarkGrey);\r\n            doc.setFontSize(10);\r\n            doc.text(xPosition, yPosition, `Telephone:`);\r\n            doc.setFont(fontType, 'normal');\r\n            doc.setTextColor(colorLightGrey);\r\n            doc.text(xPosition + 22 , yPosition, `${personalInfo[0].telephone}`)\r\n            updateHeight(smallHeight);\r\n            doc.setFont(fontType, 'bold');\r\n            doc.setTextColor(colorDarkGrey);\r\n            doc.text(xPosition, yPosition, `Email:`);\r\n            doc.setFont(fontType, 'normal');\r\n            doc.setTextColor(colorLightGrey);\r\n            doc.text(xPosition + 14 , yPosition, `${personalInfo[0].email}`);\r\n            updateHeight(verySmallHeight);\r\n\r\n            // line\r\n            doc.setDrawColor(colorLightGrey);\r\n            doc.line(xPosition, yPosition, 200, yPosition, 'FD');\r\n            updateHeight(rowHeight);\r\n            updateHeight(smallHeight);\r\n        },\r\n        // as vrea sa folosesc for each, ca sa ma obisnuiesc sa lucrez cu array-uri\r\n        addEducation : (educationInfo) => {\r\n\r\n            // section education title\r\n            doc.setFont(fontType, 'bold');\r\n            doc.setTextColor(colorAccent);\r\n            doc.setFontSize(14);\r\n            doc.text(xPosition, yPosition,'Education and training');\r\n            updateHeight(rowHeight);\r\n\r\n            // section education content\r\n            doc.setTextColor(colorDefault);\r\n            doc.setFontSize(12);\r\n            doc.setFont(fontType, 'normal');\r\n            for (let i = 0; i < educationInfo.length; i++){\r\n\r\n                // education title\r\n                doc.setFont(fontType, 'bold');\r\n                doc.setFontSize(12); \r\n                doc.text(xPosition, yPosition, `${educationInfo[i].titleAwarded}`);\r\n                doc.setFont(fontType, 'normal');\r\n                updateHeight(smallHeight);\r\n\r\n                // organization education name\r\n                doc.setFontSize(11);\r\n                doc.text(xPosition, yPosition, `${educationInfo[i].nameOrganization}`);\r\n                updateHeight(smallHeight);\r\n\r\n                // education period\r\n                doc.text(xPosition, yPosition, `${format(new Date (educationInfo[i].startDate), 'MMMM yyyy')} - ${format(new Date(educationInfo[i].endDate), 'MMMM yyyy')}`);\r\n                updateHeight(rowHeight);\r\n            }\r\n            updateHeight(smallHeight);\r\n        },\r\n        // as vrea sa folosesc for each, ca sa ma obisnuiesc sa lucrez cu array-uri\r\n        addWorkExperience : (workExpInfo) => {\r\n\r\n            // section work experience title\r\n            doc.setFont(fontType, 'bold');\r\n            doc.setTextColor(colorAccent);\r\n            doc.setFontSize(14);\r\n            doc.text(xPosition, yPosition,'Work experience');\r\n            updateHeight(rowHeight);\r\n\r\n            // work experience content\r\n            doc.setTextColor(colorDefault);\r\n            doc.setFontSize(12);\r\n            doc.setFont(fontType, 'normal');\r\n            for (let i = 0; i < workExpInfo.length; i++){\r\n\r\n                // job title\r\n                doc.setFont(fontType, 'bold');\r\n                doc.setFontSize(12); \r\n                doc.text(xPosition, yPosition, `${workExpInfo[i].titleOcupation},`)\r\n                updateHeight(smallHeight);\r\n\r\n                // organization name\r\n                doc.text(xPosition, yPosition, `${workExpInfo[i].nameOrganization}`)\r\n                updateHeight(smallHeight); \r\n\r\n                // job period\r\n                doc.text(xPosition, yPosition, `${format(new Date(workExpInfo[i].startDate), 'MMMM yyyy')} - ${format(new Date(workExpInfo[i].endDate), 'MMMM yyyy')}`);\r\n                doc.setFont(fontType, 'normal');\r\n                doc.setFontSize(11);\r\n                updateHeight(smallHeight); \r\n\r\n                // job responsibilities\r\n                let jobResponsibilities = workExpInfo[i].mainActivities.split('\\n');\r\n                for (let i = 0; i < jobResponsibilities.length; i++){\r\n                    let numberOfRows = Math.floor(jobResponsibilities[i].length/74);\r\n                    doc.text(`- ${jobResponsibilities[i]}`, xPosition + 10, yPosition, {maxWidth: 170}); \r\n                    if(numberOfRows > 0){\r\n                        updateHeight(smallHeight * (numberOfRows + 1));\r\n                    }else{\r\n                      updateHeight(smallHeight);  \r\n                    }\r\n                }\r\n                /*\r\n                jobResponsibilities.forEach(element => {\r\n                    doc.text(element, xPosition, 20); // daca pun yPosition imi da un warning. Cu for merge fara probleme. De ce?\r\n                    updateHeight(rowHeight);\r\n                });*/\r\n                updateHeight(rowHeight);\r\n            }  \r\n        },\r\n        savePDF : (title) =>{\r\n            doc.save(title);\r\n        }\r\n    }\r\n}\r\n\r\nexport default createPDF;","import './App.css';\nimport React, { Component } from 'react';\nimport PersonalInfo from './components/PersonalInfo';\nimport Education from './components/Education';\nimport WorkExperience from './components/WorkExperience';\nimport createPDF from './components/utils/createPDF'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.state={\n      buttonValue : 0,\n      buttonLabel : \"Preview\",\n      valoriPersonal: [],\n      valoriEdu : [],\n      valoriExp : [],\n    }\n    this.changeView= this.changeView.bind(this);\n  }\n\n  changeView(){\n    if (this.state.buttonValue === 0){\n      this.setState({\n        buttonValue : 1,\n        buttonLabel : \"Go back to editing\"\n      })\n    }else{\n      this.setState({\n        buttonValue : 0,\n        buttonLabel : \"Preview\"\n      })\n    }\n  }\n\n  setStateValue = (valoriExp, compName) => {\n    this.setState({\n      [compName] : valoriExp // Daca nu folosesc paranteze patrate nu merge. Pare ca nu recunoaste argumentul... De ce??? Vezi \"computed property names\"\n    })\n  }\n\n  generatePDF = () => {\n    const createCV = createPDF ();\n    createCV.addPersInfo(this.state.valoriPersonal);\n    createCV.addEducation(this.state.valoriEdu);\n    createCV.addWorkExperience(this.state.valoriExp);\n    createCV.savePDF(`${this.state.valoriPersonal[0].firstName} ${this.state.valoriPersonal[0].lastName} CV.pdf`);\n  }\n  \n  render(){\n    return (\n      <div>\n        <header>\n          <h1>Create your CV</h1>\n        </header>\n        <main>\n          <PersonalInfo screenView={this.state.buttonValue} getStateValues = {this.setStateValue}/>\n          <Education screenView={this.state.buttonValue} getStateValues = {this.setStateValue}/>\n          <WorkExperience screenView={this.state.buttonValue} getStateValues = {this.setStateValue}/>\n          <div className=\"bottom-buttons\">\n            <button className=\"preview-button buttons\" onClick= {this.changeView}>{this.state.buttonLabel}</button>\n            <button className=\"generatePDF-button buttons\" onClick= {this.generatePDF}>Generate PDF</button>    \n          </div>\n        </main>\n        <footer></footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}