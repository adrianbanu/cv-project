{"version":3,"sources":["components/PersonalInfo.js","components/ShowEduInfo.js","components/Education.js","components/ShowExperienceInfo.js","components/WorkExperience.js","components/utils/createPDF.js","App.js","index.js"],"names":["PersonalInfo","screenView","getStateValues","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","telephone","setTelephone","changeInfo","event","target","name","value","useEffect","className","type","placeholder","onChange","ShowEduInfo","props","dateValues","valueStartDate","valueEndDate","format","Date","valueTitle","evt","showInput","elementId","valueOrganization","inputType","onFocus","focus","onBlur","blur","onClick","deleteEducation","Education","titleAwarded","setTitleAwarded","nameOrganization","setNameOrganization","startDate","setStartDate","endDate","setEndDate","id","setId","educationInfo","setEducationInfo","setType","nextEducationInfo","filter","item","changedEducationInfo","index","findIndex","addToEducation","classNameSection","classNameSectionHeader","classNameButtons","length","educationSection","i","push","loopEducationInfo","ShowExperienceInfo","mainActivities","deleteExperience","split","map","task","WorkExperience","titleOcupation","setTitleOcupation","setMainActivities","experienceInfo","setExperienceInfo","nextExperienceInfo","changedExperienceInfo","addToExperience","experienceSection","loopExperienceInfo","colorAccent","colorDefault","colorDarkGrey","colorLightGrey","fontType","createPDF","doc","jsPDF","xPosition","yPosition","updateHeight","row","addPage","addPersInfo","personalInfo","setFont","setFontSize","setTextColor","text","setDrawColor","line","addEducation","addWorkExperience","workExpInfo","jobResponsibilities","numberOfRows","Math","floor","maxWidth","savePDF","title","save","App","buttonValue","setButtonValue","buttonLabel","setButtonLabel","infoPersonal","setInfoPersonal","infoEducation","setInfoEducation","infoExperience","setInfoExperience","setStateValue","componentValues","componentName","createCV","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92feb705.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst PersonalInfo = ({screenView, getStateValues}) => {\r\n\r\n    const[firstName, setFirstName] = useState(\"\");\r\n    const[lastName, setLastName] = useState(\"\");\r\n    const[email, setEmail] = useState(\"\");\r\n    const[telephone, setTelephone] = useState(\"\");\r\n    \r\n    // update state values\r\n    const changeInfo = (event) =>{\r\n        switch(event.target.name){\r\n            default:\r\n            case \"firstName\":\r\n                setFirstName(event.target.value);\r\n                break;\r\n            case \"lastName\":\r\n                setLastName(event.target.value);\r\n                break;\r\n            case \"email\":\r\n                setEmail(event.target.value);\r\n                break;\r\n            case \"telephone\":\r\n                setTelephone(event.target.value);               \r\n        }\r\n\t}\r\n    \r\n    // This line gives a warning. In this case I think it is fine to ignore it.\r\n    /*\r\n    It is only safe to omit a function from the dependency list if nothing in it (or the functions called by it) references props, \r\n    state, or values derived from them. [I refer to states from another component so I think that is fine]\r\n    From here: https://reactjs.org/docs/hooks-faq.html#is-it-safe-to-omit-functions-from-the-list-of-dependencies\r\n    */\r\n    useEffect(() => {\r\n        getStateValues([{firstName, lastName, email, telephone}], \"infoPersonal\");\r\n      },[firstName, lastName, email, telephone]);\r\n      \r\n\r\n    return(  \r\n        screenView === 0 ?\r\n\r\n            //Edit screen           \r\n            <div className=\"edit-section-container\"> \r\n                <h3 className=\"edit-section-header\">Personal Information</h3>\r\n                <input type=\"text\" name =\"firstName\" placeholder=\"First name\" value={firstName} onChange={changeInfo}/>\r\n                <input type=\"text\" name =\"lastName\" placeholder=\"Last name\" value={lastName} onChange={changeInfo}></input>\r\n                <input type=\"email\" name =\"email\" placeholder=\"Email\"  value={email} onChange={changeInfo}></input>\r\n                <input type=\"tel\" name =\"telephone\" placeholder=\"Telephone\"  value={telephone} onChange={changeInfo}></input>\r\n            </div>\r\n\r\n        :   //Preview screen\r\n            <div className=\"preview-personal-container\">\r\n                <h3 className=\"preview-section-header\">\r\n                    <label>{firstName}</label>&nbsp;\r\n                    <label>{lastName}</label>\r\n                </h3>\r\n                <div className=\"contact-telephone\">\r\n                    <label className=\"contact\">Telephone: </label>\r\n                    <label className=\"contact-detail\">{telephone}</label>                        \r\n                </div>\r\n                <div className=\"contact-email\">\r\n                    <label className=\"contact\">Email: </label>\r\n                    <label className=\"contact-detail\">{email}</label>                        \r\n                </div>\r\n                <div className=\"grey-line\"></div>                    \r\n            </div>\r\n    );\r\n}\r\n\r\nexport default PersonalInfo;","import React from \"react\";\r\nimport {format} from 'date-fns';\r\n\r\nfunction ShowEduInfo(props) {\r\n  let dateValues;\r\n  if (props.valueStartDate === \"\" || props.valueEndDate === \"\"){\r\n    dateValues = \" \";\r\n  }else{\r\n    dateValues = `${format(new Date(props.valueStartDate), 'MMMM yyyy')} - ${format(new Date(props.valueEndDate), 'MMMM yyyy')}`;\r\n  }\r\n\r\n  return (\r\n    props.screenView === 0 ?\r\n\r\n      // Edit screen\r\n      <div className=\"edit-section-container\" key={props.elementId}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"titleAwarded\"\r\n          placeholder=\"Name of title\"\r\n          value={props.valueTitle}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"nameOrganization\"\r\n          placeholder=\"Name of organization\"\r\n          value={props.valueOrganization}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n        />\r\n        \r\n        <input\r\n          type={props.inputType} \r\n          name=\"startDate\"\r\n          placeholder=\"Start date\"\r\n          onFocus={props.focus}\r\n          onBlur={props.blur}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          value={props.valueStartDate}\r\n        />\r\n        \r\n        <input\r\n          type={props.inputType}\r\n          name=\"endDate\"\r\n          placeholder=\"End date\"\r\n          onFocus={props.focus}\r\n          onBlur={props.blur}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          value={props.valueEndDate}\r\n        />\r\n        \r\n        <button className=\"edit-buttons buttons\"\r\n          onClick={() => props.deleteEducation(props.elementId)}\r\n          onChange={(evt) => props.showInput(props.elementId, evt)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n\r\n    : //Preview screen\r\n      <div className=\"preview-education-container\">\r\n        <div className=\"title\">{props.valueTitle}</div>\r\n        <div className=\"name-organization\">{props.valueOrganization}</div>\r\n        <div className=\"start-end\">\r\n          <label>{dateValues}</label>\r\n        </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default ShowEduInfo;\r\n","import React, { useState } from \"react\";\r\nimport ShowEduInfo from \"./ShowEduInfo\";\r\n\r\nconst Education = (props) => {\r\n\r\n    const[titleAwarded, setTitleAwarded] = useState(\"\");\r\n    const[nameOrganization, setNameOrganization] = useState(\"\");\r\n    const[startDate, setStartDate] = useState(\"\");\r\n    const[endDate, setEndDate] = useState(\"\");\r\n    const[id, setId]= useState(0);\r\n\r\n    const[educationInfo, setEducationInfo] = useState([]);\r\n    const[type, setType] = useState(\"text\");\r\n\r\n    const onFocus = () => {\r\n        setType('date');\r\n    }\r\n\r\n    const onBlur = () =>{\r\n        setType('text');\r\n    }\r\n\r\n    const deleteEducation = (id) =>{\r\n        const nextEducationInfo = educationInfo.filter((item) => id !== item.id);\r\n        props.getStateValues(nextEducationInfo, \"infoEducation\"); \r\n        setEducationInfo(nextEducationInfo);\r\n    }\r\n\r\n    const changeInfo = (id, event) =>{\r\n        let changedEducationInfo = [...educationInfo];\r\n        let index = changedEducationInfo.findIndex((item) => id === item.id)\r\n        changedEducationInfo[index][event.target.name] = event.target.value;\r\n\r\n        props.getStateValues(changedEducationInfo, \"infoEducation\") // send the array in App\r\n\r\n        setEducationInfo(changedEducationInfo);\r\n\t}\r\n\r\n    const addToEducation = () =>{\r\n        setTitleAwarded(\"\");\r\n        setNameOrganization(\"\");\r\n        setStartDate(\"\");\r\n        setEndDate(\"\");\r\n        setId(id + 1);\r\n\r\n        setEducationInfo([...educationInfo, {titleAwarded, nameOrganization, startDate, endDate, id}]);\r\n    }\r\n\r\n    const loopEducationInfo = () =>{\r\n        educationInfo.length === 0 && addToEducation()\r\n        let educationSection = []\r\n        for(let i = 0; i < educationInfo.length; i++){\r\n            educationSection.push(<ShowEduInfo valueTitle = {educationInfo[i].titleAwarded} \r\n                valueOrganization={educationInfo[i].nameOrganization}\r\n                valueStartDate = {educationInfo[i].startDate} \r\n                valueEndDate = {educationInfo[i].endDate}\r\n                elementId = {educationInfo[i].id}\r\n                key = {educationInfo[i].id}// no warning in console\r\n                deleteEducation = {deleteEducation}\r\n                screenView = {props.screenView} \r\n                showInput = {changeInfo} blur = {onBlur} focus = {onFocus} inputType ={type}/>)\r\n        }\r\n\r\n        return <div className=\"education-section\">\r\n            {educationSection}\r\n        </div>\r\n    }\r\n\r\n    let classNameSection = props.screenView === 0 ? \"edit-section\" : \"preview-section\";\r\n    let classNameSectionHeader = props.screenView === 0 ? \"edit-section-header\" : \"preview-education-header\";\r\n    let classNameButtons = props.screenView === 0 ? \"edit-buttons buttons\" : \"no-display\";\r\n    return(\r\n        <div className={classNameSection}>\r\n            <h3 className={classNameSectionHeader}>Education and training</h3>\r\n            {loopEducationInfo()}\r\n            <button className={classNameButtons} onClick={addToEducation}>Add education </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Education;   ","import React from \"react\";\r\nimport {format} from 'date-fns';\r\n\r\nfunction ShowExperienceInfo(props) {\r\n  let dateValues;\r\n  if (props.valueStartDate === \"\" || props.valueEndDate === \"\"){\r\n    dateValues = \" \";\r\n  }else{\r\n    dateValues = `${format(new Date(props.valueStartDate), 'MMMM yyyy')} - ${format(new Date(props.valueEndDate), 'MMMM yyyy')}`;\r\n  }\r\n\r\n    return (\r\n      props.screenView === 0 ?\r\n\r\n      // Edit screen\r\n        <div className=\"edit-section-container\" key={props.elementId}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"titleOcupation\"\r\n            placeholder=\"Name of title\"\r\n            value={props.valueTitle}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"nameOrganization\"\r\n            placeholder=\"Name of organization\"\r\n            value={props.valueOrganization}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          />\r\n          \r\n          <input\r\n            type={props.inputType}\r\n            name=\"startDate\"\r\n            placeholder=\"Start date\"\r\n            onFocus={props.focus}\r\n            onBlur={props.blur}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n            value={props.valueStartDate}\r\n          />\r\n          \r\n          <input\r\n            type={props.inputType}\r\n            name=\"endDate\"\r\n            placeholder=\"End date\"\r\n            onFocus={props.focus}\r\n            onBlur={props.blur}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n            value={props.valueEndDate}\r\n          />\r\n          \r\n          <textarea\r\n            name=\"mainActivities\"\r\n            placeholder=\"Main activities\"\r\n            value={props.mainActivities}\r\n            onChange={(evt) => props.showInput(props.elementId, evt)}\r\n          ></textarea>\r\n          \r\n          <button className=\"edit-buttons buttons\"\r\n            onClick={() => props.deleteExperience(props.elementId)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n\r\n      : //Preview screen\r\n      <div className=\"preview-work-container\">\r\n        <div className=\"title\">{props.valueTitle}</div>\r\n        <div className=\"name-organization\">{props.valueOrganization}</div>\r\n        <div className=\"start-end\">\r\n          <label>{dateValues}</label>\r\n        </div>\r\n        {props.mainActivities ?\r\n          <ul className=\"main-responsabilities\">\r\n            {props.mainActivities.split('\\n').map((task, i) => {\r\n              return <li key={i}>{task}</li>;\r\n            })}\r\n          </ul>\r\n        : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default ShowExperienceInfo;\r\n","import React, { useState } from \"react\";\r\nimport ShowExperienceInfo from \"./ShowExperienceInfo\";\r\n\r\nconst WorkExperience = (props) => {\r\n\r\n    const[titleOcupation, setTitleOcupation] = useState(\"\");\r\n    const[nameOrganization, setNameOrganization] = useState(\"\");\r\n    const[startDate, setStartDate] = useState(\"\");\r\n    const[endDate, setEndDate] = useState(\"\");\r\n    const[mainActivities, setMainActivities] = useState(\"\");\r\n    const[id, setId]= useState(0);\r\n\r\n    const[experienceInfo, setExperienceInfo] = useState([]);\r\n    const[type, setType] = useState(\"text\");\r\n\r\n    const onFocus = () => {\r\n        setType('date');\r\n    }\r\n\r\n    const onBlur = () =>{\r\n        setType('text');\r\n    }\r\n\r\n    const deleteExperience = (id) =>{\r\n        const nextExperienceInfo = experienceInfo.filter((item) => id !== item.id);\r\n        props.getStateValues(nextExperienceInfo, \"infoExperience\"); \r\n        setExperienceInfo(nextExperienceInfo);\r\n    }\r\n\r\n    const changeInfo = (id, event) =>{\r\n        let changedExperienceInfo = [...experienceInfo];\r\n        let index = changedExperienceInfo.findIndex((item) => id === item.id)\r\n        changedExperienceInfo[index][event.target.name] = event.target.value;\r\n\r\n        props.getStateValues(changedExperienceInfo, \"infoExperience\"); \r\n\r\n        setExperienceInfo(changedExperienceInfo);\r\n\t}\r\n\r\n    const addToExperience = () => {\r\n        setTitleOcupation(\"\");\r\n        setNameOrganization(\"\");\r\n        setStartDate(\"\");\r\n        setEndDate(\"\");\r\n        setMainActivities(\"\");\r\n        setId(id + 1);\r\n\r\n        setExperienceInfo([...experienceInfo, {titleOcupation, nameOrganization, startDate, endDate, mainActivities, id}]);\r\n    }\r\n\r\n    const loopExperienceInfo = () =>{\r\n        experienceInfo.length === 0 && addToExperience()\r\n        let experienceSection = []\r\n        for(let i = 0; i < experienceInfo.length; i++){\r\n            experienceSection.push(<ShowExperienceInfo valueTitle = {experienceInfo[i].titleOcupation} \r\n                valueOrganization={experienceInfo[i].nameOrganization}\r\n                valueStartDate = {experienceInfo[i].startDate} \r\n                valueEndDate = {experienceInfo[i].endDate}\r\n                mainActivities = {experienceInfo[i].mainActivities}\r\n                elementId = {experienceInfo[i].id}\r\n                key = {experienceInfo[i].id}\r\n                deleteExperience = {deleteExperience}\r\n                screenView = {props.screenView}\r\n                showInput = {changeInfo} blur = {onBlur} focus = {onFocus} inputType ={type}/>)\r\n        }\r\n\r\n        return <div className=\"experience-section\">\r\n            {experienceSection}\r\n        </div>\r\n    }\r\n\r\n    let classNameSection = props.screenView === 0 ? \"edit-section\" : \"preview-section\";\r\n    let classNameSectionHeader = props.screenView === 0 ? \"edit-section-header\" : \"preview-work-header\";\r\n    let classNameButtons = props.screenView === 0 ? \"edit-buttons buttons\" : \"no-display\";\r\n    return(\r\n        <div className={classNameSection}>\r\n            <h3 className={classNameSectionHeader}>Work experience</h3>\r\n            {loopExperienceInfo()}\r\n            <button className={classNameButtons} onClick={addToExperience}>Add experience </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WorkExperience;","import jsPDF from 'jspdf';\r\nimport {format} from 'date-fns';\r\n\r\nconst rowHeight = 10;\r\nconst smallHeight = 5;\r\nconst verySmallHeight = 2;\r\nconst colorAccent = \"#3D85C6\";\r\nconst colorDefault = \"#444444\";\r\nconst colorDarkGrey = \"#666666\";\r\nconst colorLightGrey = \"#999999\";\r\nconst fontType = 'Courier';\r\n\r\nconst createPDF = () =>{\r\n    const doc = new jsPDF();\r\n\r\n    let xPosition = 20;\r\n    let yPosition = 20;\r\n    let pageHeight = 280\r\n\r\n    const updateHeight = (row) => {\r\n        yPosition = yPosition + row;\r\n        if(yPosition >= pageHeight){\r\n            doc.addPage();\r\n            yPosition = 20;\r\n        }\r\n    }\r\n\r\n    return {\r\n        addPersInfo : (personalInfo) => {\r\n\r\n            // section name\r\n            doc.setFont(fontType, 'bold');\r\n            doc.setFontSize(18);\r\n            doc.setTextColor(colorAccent);\r\n            doc.setFont(fontType, 'bold');\r\n            doc.text(xPosition, yPosition, `${personalInfo[0].firstName} ${personalInfo[0].lastName}`);\r\n            updateHeight(smallHeight);\r\n\r\n            // Telephone and Email\r\n            doc.setTextColor(colorDarkGrey);\r\n            doc.setFontSize(10);\r\n            doc.text(xPosition, yPosition, `Telephone:`);\r\n            doc.setFont(fontType, 'normal');\r\n            doc.setTextColor(colorLightGrey);\r\n            doc.text(xPosition + 22 , yPosition, `${personalInfo[0].telephone}`)\r\n            updateHeight(smallHeight);\r\n            doc.setFont(fontType, 'bold');\r\n            doc.setTextColor(colorDarkGrey);\r\n            doc.text(xPosition, yPosition, `Email:`);\r\n            doc.setFont(fontType, 'normal');\r\n            doc.setTextColor(colorLightGrey);\r\n            doc.text(xPosition + 14 , yPosition, `${personalInfo[0].email}`);\r\n            updateHeight(verySmallHeight);\r\n\r\n            // line\r\n            doc.setDrawColor(colorLightGrey);\r\n            doc.line(xPosition, yPosition, 200, yPosition, 'FD');\r\n            updateHeight(rowHeight);\r\n            updateHeight(smallHeight);\r\n        },\r\n        \r\n        addEducation : (educationInfo) => {\r\n\r\n            // section education title\r\n            doc.setFont(fontType, 'bold');\r\n            doc.setTextColor(colorAccent);\r\n            doc.setFontSize(14);\r\n            doc.text(xPosition, yPosition,'Education and training');\r\n            updateHeight(rowHeight);\r\n\r\n            // section education content\r\n            doc.setTextColor(colorDefault);\r\n            doc.setFontSize(12);\r\n            doc.setFont(fontType, 'normal');\r\n            for (let i = 0; i < educationInfo.length; i++){\r\n\r\n                // education title\r\n                doc.setFont(fontType, 'bold');\r\n                doc.setFontSize(12); \r\n                doc.text(xPosition, yPosition, `${educationInfo[i].titleAwarded}`);\r\n                doc.setFont(fontType, 'normal');\r\n                updateHeight(smallHeight);\r\n\r\n                // organization education name\r\n                doc.setFontSize(11);\r\n                doc.text(xPosition, yPosition, `${educationInfo[i].nameOrganization}`);\r\n                updateHeight(smallHeight);\r\n\r\n                // education period\r\n                if (educationInfo[i].startDate !== \"\" && educationInfo[i].endDate !== \"\"){\r\n                    doc.text(xPosition, yPosition, `${format(new Date (educationInfo[i].startDate), 'MMMM yyyy')} - ${format(new Date(educationInfo[i].endDate), 'MMMM yyyy')}`);\r\n                    updateHeight(rowHeight);\r\n                }\r\n\r\n            }\r\n            updateHeight(smallHeight);\r\n        },\r\n        \r\n        addWorkExperience : (workExpInfo) => {\r\n\r\n            // section work experience title\r\n            doc.setFont(fontType, 'bold');\r\n            doc.setTextColor(colorAccent);\r\n            doc.setFontSize(14);\r\n            doc.text(xPosition, yPosition,'Work experience');\r\n            updateHeight(rowHeight);\r\n\r\n            // work experience content\r\n            doc.setTextColor(colorDefault);\r\n            doc.setFontSize(12);\r\n            doc.setFont(fontType, 'normal');\r\n            for (let i = 0; i < workExpInfo.length; i++){\r\n\r\n                // job title\r\n                doc.setFont(fontType, 'bold');\r\n                doc.setFontSize(12); \r\n                doc.text(xPosition, yPosition, `${workExpInfo[i].titleOcupation},`)\r\n                updateHeight(smallHeight);\r\n\r\n                // organization name\r\n                doc.text(xPosition, yPosition, `${workExpInfo[i].nameOrganization}`)\r\n                updateHeight(smallHeight); \r\n\r\n                // job period\r\n                if (workExpInfo[i].startDate !== \"\" && workExpInfo[i].endDate !== \"\"){\r\n                    doc.text(xPosition, yPosition, `${format(new Date(workExpInfo[i].startDate), 'MMMM yyyy')} - ${format(new Date(workExpInfo[i].endDate), 'MMMM yyyy')}`);\r\n                    doc.setFont(fontType, 'normal');\r\n                    doc.setFontSize(11);\r\n                    updateHeight(smallHeight); \r\n                }\r\n\r\n                // job responsibilities\r\n                let jobResponsibilities = workExpInfo[i].mainActivities.split('\\n');\r\n                if (jobResponsibilities){\r\n                    for (let i = 0; i < jobResponsibilities.length; i++){\r\n                        let numberOfRows = Math.floor(jobResponsibilities[i].length/74);\r\n                        doc.text(`- ${jobResponsibilities[i]}`, xPosition + 10, yPosition, {maxWidth: 170}); \r\n                        if(numberOfRows > 0){\r\n                            updateHeight(smallHeight * (numberOfRows + 1));\r\n                        }else{\r\n                        updateHeight(smallHeight);  \r\n                        }\r\n                    }                    \r\n                }\r\n                updateHeight(rowHeight);\r\n            }  \r\n        },\r\n        savePDF : (title) =>{\r\n            doc.save(title);\r\n        }\r\n    }\r\n}\r\n\r\nexport default createPDF;\r\n","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport PersonalInfo from './components/PersonalInfo';\r\nimport Education from './components/Education';\r\nimport WorkExperience from './components/WorkExperience';\r\nimport createPDF from './components/utils/createPDF'\r\n\r\nconst App = () => {\r\n\r\n  const [buttonValue, setButtonValue] = useState(0);\r\n  const [buttonLabel, setButtonLabel] = useState(\"Preview\");\r\n  const [infoPersonal, setInfoPersonal] = useState([]);\r\n  const [infoEducation, setInfoEducation] = useState([]);\r\n  const [infoExperience, setInfoExperience] = useState([]);\r\n\r\n  const changeView = () => {\r\n    if (buttonValue === 0){\r\n      setButtonValue(1);\r\n      setButtonLabel(\"Go back to editing\");\r\n    }else{\r\n      setButtonValue(0);\r\n      setButtonLabel(\"Preview\");\r\n    }\r\n  }\r\n\r\n  // populate state variables\r\n  const setStateValue = (componentValues, componentName) => {\r\n    switch(componentName){\r\n      default:\r\n      case \"infoExperience\":\r\n        setInfoExperience(componentValues);\r\n        break;\r\n      case \"infoEducation\":\r\n        setInfoEducation(componentValues);\r\n        break;\r\n      case \"infoPersonal\":\r\n        setInfoPersonal(componentValues);\r\n    }\r\n  }\r\n\r\n  const generatePDF = () => {\r\n    const createCV = createPDF ();\r\n    createCV.addPersInfo(infoPersonal);\r\n    createCV.addEducation(infoEducation);\r\n    createCV.addWorkExperience(infoExperience);\r\n    //console.log(\"prenume: \", infoPersonal[0].firstName);\r\n    //console.log(\"nume: \", infoPersonal[0].lastName);\r\n    createCV.savePDF(`${infoPersonal[0].firstName} ${infoPersonal[0].lastName} CV.pdf`);\r\n  }\r\n   \r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>Create your CV</h1>\r\n        </header>\r\n        <main>\r\n          <PersonalInfo screenView={buttonValue} getStateValues = {setStateValue}/>\r\n          <Education screenView={buttonValue} getStateValues = {setStateValue}/>\r\n          <WorkExperience screenView={buttonValue} getStateValues = {setStateValue}/>\r\n          <div className=\"bottom-buttons\">\r\n            <button className=\"preview-button buttons\" onClick= {changeView}>{buttonLabel}</button>\r\n            <button className=\"generatePDF-button buttons\" onClick= {generatePDF}>Generate PDF</button>    \r\n          </div>\r\n        </main>\r\n        <footer></footer>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}